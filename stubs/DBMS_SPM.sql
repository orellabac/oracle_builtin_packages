CREATE SCHEMA DBMS_SPM;

CREATE OR REPLACE PROCEDURE DBMS_SPM.ACCEPT_SQL_PLAN_BASELINE(TASK_NAME VARCHAR,OBJECT_ID NUMBER,TASK_OWNER VARCHAR,FORCE BOOLEAN)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE FUNCTION DBMS_SPM.ALTER_SQL_PLAN_BASELINE(SQL_HANDLE VARCHAR,PLAN_NAME VARCHAR,ATTRIBUTE_NAME VARCHAR,ATTRIBUTE_VALUE VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE PROCEDURE DBMS_SPM.CANCEL_EVOLVE_TASK(TASK_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE PROCEDURE DBMS_SPM.CONFIGURE(PARAMETER_NAME VARCHAR,PARAMETER_VALUE NUMBER)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE FUNCTION DBMS_SPM.CREATE_EVOLVE_TASK(SQL_HANDLE VARCHAR,PLAN_NAME VARCHAR,TIME_LIMIT NUMBER,TASK_NAME VARCHAR,DESCRIPTION VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.CREATE_EVOLVE_TASK(PLAN_LIST NAME_LIST,TIME_LIMIT NUMBER,TASK_NAME VARCHAR,DESCRIPTION VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE PROCEDURE DBMS_SPM.CREATE_STGTAB_BASELINE(TABLE_NAME VARCHAR,TABLE_OWNER VARCHAR,TABLESPACE_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE PROCEDURE DBMS_SPM.DROP_EVOLVE_TASK(TASK_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE FUNCTION DBMS_SPM.DROP_MIGRATED_STORED_OUTLINE(PLAN_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.EVOLVE_SQL_PLAN_BASELINE(SQL_HANDLE VARCHAR,PLAN_NAME VARCHAR,TIME_LIMIT NUMBER(38),VERIFY VARCHAR,COMMIT VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.EVOLVE_SQL_PLAN_BASELINE(PLAN_LIST NAME_LIST,TIME_LIMIT NUMBER(38),VERIFY VARCHAR,COMMIT VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.EXECUTE_EVOLVE_TASK(TASK_NAME VARCHAR,EXECUTION_NAME VARCHAR,EXECUTION_DESC VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.IMPLEMENT_EVOLVE_TASK(TASK_NAME VARCHAR,TASK_OWNER VARCHAR,EXECUTION_NAME VARCHAR,FORCE BOOLEAN)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE PROCEDURE DBMS_SPM.INTERRUPT_EVOLVE_TASK(TASK_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE FUNCTION DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE(ATTRIBUTE_NAME VARCHAR,ATTRIBUTE_VALUE VARCHAR,FIXED VARCHAR,ENABLED VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE(SQL_ID VARCHAR,PLAN_HASH_VALUE NUMBER,FIXED VARCHAR,ENABLED VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE(SQL_ID VARCHAR,PLAN_HASH_VALUE NUMBER,SQL_TEXT CLOB,FIXED VARCHAR,ENABLED VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.LOAD_PLANS_FROM_CURSOR_CACHE(SQL_ID VARCHAR,PLAN_HASH_VALUE NUMBER,SQL_HANDLE VARCHAR,FIXED VARCHAR,ENABLED VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.LOAD_PLANS_FROM_SQLSET(SQLSET_NAME VARCHAR,SQLSET_OWNER VARCHAR,BASIC_FILTER VARCHAR,FIXED VARCHAR,ENABLED VARCHAR,COMMIT_ROWS NUMBER)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.MIGRATE_STORED_OUTLINE(ATTRIBUTE_NAME VARCHAR,ATTRIBUTE_VALUE CLOB,FIXED VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.MIGRATE_STORED_OUTLINE(OUTLN_LIST NAME_LIST,FIXED VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.PACK_STGTAB_BASELINE(TABLE_NAME VARCHAR,TABLE_OWNER VARCHAR,SQL_HANDLE VARCHAR,PLAN_NAME VARCHAR,SQL_TEXT CLOB,CREATOR VARCHAR,ORIGIN VARCHAR,ENABLED VARCHAR,ACCEPTED VARCHAR,FIXED VARCHAR,MODULE VARCHAR,ACTION VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.REPORT_AUTO_EVOLVE_TASK(TYPE VARCHAR,LEVEL VARCHAR,SECTION VARCHAR,OBJECT_ID NUMBER,EXECUTION_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE FUNCTION DBMS_SPM.REPORT_EVOLVE_TASK(TASK_NAME VARCHAR,TYPE VARCHAR,LEVEL VARCHAR,SECTION VARCHAR,OBJECT_ID NUMBER,TASK_OWNER VARCHAR,EXECUTION_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

CREATE OR REPLACE PROCEDURE DBMS_SPM.RESET_EVOLVE_TASK(TASK_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE PROCEDURE DBMS_SPM.RESUME_EVOLVE_TASK(TASK_NAME VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE PROCEDURE DBMS_SPM.SET_EVOLVE_TASK_PARAMETER(TASK_NAME VARCHAR,PARAMETER VARCHAR,VALUE NUMBER)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE PROCEDURE DBMS_SPM.SET_EVOLVE_TASK_PARAMETER(TASK_NAME VARCHAR,PARAMETER VARCHAR,VALUE VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$

CREATE OR REPLACE FUNCTION DBMS_SPM.UNPACK_STGTAB_BASELINE(TABLE_NAME VARCHAR,TABLE_OWNER VARCHAR,SQL_HANDLE VARCHAR,PLAN_NAME VARCHAR,SQL_TEXT CLOB,CREATOR VARCHAR,ORIGIN VARCHAR,ENABLED VARCHAR,ACCEPTED VARCHAR,FIXED VARCHAR,MODULE VARCHAR,ACTION VARCHAR)
RETURNS STRING
LANGUAGE JAVASCRIPT
AS $$
/** add some code here **/
$$;

